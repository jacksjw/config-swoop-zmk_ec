/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
//#include "zmk-nodefree-config/helper.h"
//#include "zmk-nodefree-config/keypos_def/keypos_36keys.h"

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  /* left hand  */
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  /* right hand */
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                      /* thumbs     */
#define DEF 0
#define GAM 1
#define GAN 2
#define MED 3
#define NAV 4
#define MOU 5
#define SYM 6
#define NUM 7
#define FUN 8

// Combos
//#undef COMBO_HOOK
//#define COMBO_HOOK
//#define COMBO_TERM_FAST 10
//#define COMBO_TERM_SLOW 50
// CAPS WORD
// -----------------------------------------------------------------------------------------
// tap      |   Q   |   W   |   E   |   R   |   T   |   |   Y   |   U   |   I   |   O   |   P   |
//          _____________________________________________________________________________________
// tap      |   A   |   S   |   D   |XXXFXXX|   G   |   |   H   |XXXJXXX|   K   |   L   |   ;   |
//          _____________________________________________________________________________________
// tap      |   Z   |   X   |   C   |   V   |   B   |   |   N   |   M   |   ,   |   .   |   /   |
//
// tap                      |  ESC  |  ENT  |  TAB  |   | BSPC  |  SPC  |  DEL  |
//ZMK_COMBO(caps, &caps_word, LM1 RM1, DEF, COMBO_TERM_SLOW)
//&caps_word {
//continue-list = <UNDERSCORE MINUS>;
//};
// REFRESH (F5)
// -----------------------------------------------------------------------------------------
// tap      |XXXQXXX|XXXWXXX|   E   |   R   |   T   |   |   Y   |   U   |   I   |   O   |   P   |
//          _____________________________________________________________________________________
// tap      |   A   |   S   |   D   |   F   |   G   |   |   H   |   J   |   K   |   L   |   ;   |
//          _____________________________________________________________________________________
// tap      |   Z   |   X   |   C   |   V   |   B   |   |   N   |   M   |   ,   |   .   |   /   |
//
// tap                      |  ESC  |  ENT  |  TAB  |   | BSPC  |  SPC  |  DEL  |
//ZMK_COMBO(refr, &kp F5, LT4 LT3, DEF, COMBO_TERM_FAST) 
// PASTE
// -----------------------------------------------------------------------------------------
// tap      |   Q   |   W   |   E   |   R   |   T   |   |   Y   |   U   |   I   |   O   |   P   |
//          _____________________________________________________________________________________
// tap      |   A   |   S   |   D   |   F   |   G   |   |   H   |   J   |   K   |   L   |   ;   |
//          _____________________________________________________________________________________
// tap      |   Z   |   X   |   C   |XXXVXXX|XXXBXXX|   |   N   |   M   |   ,   |   .   |   /   |
//
// tap                      |  ESC  |  ENT  |  TAB  |   | BSPC  |  SPC  |  DEL  |
//ZMK_COMBO(paste, &kp LC(V), LB0 LB1, DEF, COMBO_TERM_SLOW)
// COPY
// -----------------------------------------------------------------------------------------
// tap      |   Q   |   W   |   E   |   R   |   T   |   |   Y   |   U   |   I   |   O   |   P   |
//          _____________________________________________________________________________________
// tap      |   A   |   S   |   D   |   F   |   G   |   |   H   |   J   |   K   |   L   |   ;   |
//          _____________________________________________________________________________________
// tap      |   Z   |   X   |XXXCXXX|XXXVXXX|   B   |   |   N   |   M   |   ,   |   .   |   /   |
//
// tap                      |  ESC  |  ENT  |  TAB  |   | BSPC  |  SPC  |  DEL  |
//ZMK_COMBO(copy, &kp LC(C), LB1 LB2, DEF, COMBO_TERM_SLOW)
// CUT
// -----------------------------------------------------------------------------------------
// tap      |   Q   |   W   |   E   |   R   |   T   |   |   Y   |   U   |   I   |   O   |   P   |
//          _____________________________________________________________________________________
// tap      |   A   |   S   |   D   |   F   |   G   |   |   H   |   J   |   K   |   L   |   ;   |
//          _____________________________________________________________________________________
// tap      |   Z   |XXXXXXX|XXXCXXX|   V   |   B   |   |   N   |   M   |   ,   |   .   |   /   |
//
// tap                      |  ESC  |  ENT  |  TAB  |   | BSPC  |  SPC  |  DEL  |
//ZMK_COMBO(cut, &kp LC(X), LB2 LB3, DEF, COMBO_TERM_SLOW)
// UNDO
// -----------------------------------------------------------------------------------------
// tap      |   Q   |XXXWXXX|XXXEXXX|   R   |   T   |   |   Y   |   U   |   I   |   O   |   P   |
//          _____________________________________________________________________________________
// tap      |   A   |   S   |   D   |   F   |   G   |   |   H   |   J   |   K   |   L   |   ;   |
//          _____________________________________________________________________________________
// tap      |   Z   |   X   |   C   |   V   |   B   |   |   N   |   M   |   ,   |   .   |   /   |
//
// tap                      |  ESC  |  ENT  |  TAB  |   | BSPC  |  SPC  |  DEL  |
//ZMK_COMBO(undo, &kp LC(Z), LT2 LT3, DEF, COMBO_TERM_SLOW)
// REDO
// -----------------------------------------------------------------------------------------
// tap      |   Q   |   W   |XXXEXXX|XXXRXXX|   T   |   |   Y   |   U   |   I   |   O   |   P   |
//          _____________________________________________________________________________________
// tap      |   A   |   S   |   D   |   F   |   G   |   |   H   |   J   |   K   |   L   |   ;   |
//          _____________________________________________________________________________________
// tap      |   Z   |   X   |   C   |   V   |   B   |   |   N   |   M   |   ,   |   .   |   /   |
//
// tap                      |  ESC  |  ENT  |  TAB  |   | BSPC  |  SPC  |  DEL  |
//ZMK_COMBO(redo, &kp LC(Y), LT1 LT2, DEF, COMBO_TERM_SLOW)
// APOSTROPHE
// -----------------------------------------------------------------------------------------
// tap      |   Q   |   W   |   E   |   R   |   T   |   |   Y   |   U   |   I   |   O   |   P   |
//          ___________________________________________________________________
// tap      |   A   |   S   |   D   |   F   |   G   |   |   H   |   J   |   K   |XXXLXXX|XXX;XXX|
//          ___________________________________________________________________
// tap      |   Z   |   X   |   C   |   V   |   B   |   |   N   |   M   |   ,   |   .   |   /   |
//
// tap                      |  ESC  |  ENT  |  TAB  |   | BSPC  |  SPC  |  DEL  |
//ZMK_COMBO(apos, &kp APOS, RM3 RM4, DEF, COMBO_TERM_SLOW)

&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <250>;
    quick-tap-ms = <175>;
    require-prior-idle-ms = <150>;
};

&lt { quick-tap-ms = <250>; };

/ {
    combos {
        compatible = "zmk,combos";

        refr {
            bindings = <&kp F5>;
            key-positions = <0 1>;
            layers = <0>;
        };

        undo {
            bindings = <&kp LC(Z)>;
            key-positions = <1 2>;
            layers = <0>;
        };

        redo {
            bindings = <&kp LC(Y)>;
            key-positions = <2 3>;
            layers = <0>;
        };

        apos {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <18 19>;
            layers = <0>;
        };

        cut {
            bindings = <&kp LC(X)>;
            key-positions = <21 22>;
            layers = <0>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <22 23>;
            layers = <0>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <23 24>;
            layers = <0>;
        };

        caps {
            bindings = <&bh_capsword>;
            key-positions = <13 16>;
            layers = <0>;
        };

        bootL {
            bindings = <&bootloader>;
            key-positions = <0 20>;
            layers = <0>;
        };

        bootR {
            bindings = <&bootloader>;
            key-positions = <9 29>;
            layers = <0>;
        };

        lshift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <13 14>;
            layers = <0>;
        };
    };

    behaviors {
        bh_capsword: bh_capsword {
            compatible = "zmk,behavior-caps-word";
            label = "BH_CAPSWORD";
            #binding-cells = <0>;
            continue-list = <UNDERSCORE>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Base";

            // -----------------------------------------------------------------------------------------
            // tap      |   Q   |   W   |   E   |   R   |   T   |   |   Y   |   U   |   I   |   O   |   P   |
            // hold     |       |       |       |       |       |   |       |       |       |       |       |
            //          _____________________________________________________________________________________
            // tap      |   A   |   S   |   D   |   F   |   G   |   |   H   |   J   |   K   |   L   |   ;   |
            // hold     |       |  ALT  | CTRL  | SHFT  |       |   |       | SHFT  | CTRL  |  ALT  |       |
            //          _____________________________________________________________________________________
            // tap      |   Z   |   X   |   C   |   V   |   B   |   |   N   |   M   |   ,   |   .   |   /   |
            // hold     |  GUI  |       |       |       |       |   |       |       |       |       |  GUI  |
            //
            // tap                      |  ESC  |  ENT  |  TAB  |   | BSPC  |  SPC  |  DEL  |
            // hold  LAYER              | (GUI) | (NAV) | (MOU) |   | (SYM) | (NUM) | (FUN) |

            bindings = <
&kp Q           &kp W           &kp E         &kp R             &kp T             &kp Y           &kp U              &kp I          &kp O            &kp P
&kp A           &mt LEFT_ALT S  &mt LCTRL D   &mt LEFT_SHIFT F  &kp G             &kp H           &mt RSHIFT J       &mt RCTRL K    &mt RIGHT_ALT L  &kp SEMI
&mt LEFT_GUI Z  &kp X           &kp C         &kp V             &kp B             &kp N           &kp M              &kp COMMA      &kp DOT          &mt RIGHT_GUI FSLH
                                &lt MED LEFT  &lt NAV SPACE     &lt MOU ESCAPE    &lt SYM DELETE  &lt NUM BACKSPACE  &lt FUN RIGHT
            >;

            sensor-bindings = <&inc_dec_kp UP DOWN>, <&inc_dec_kp RIGHT LEFT>;
        };

        gam_layer {
            display-name = "Game";

            // -----------------------------------------------------------------------------------------
            // tap      |  TAB  |   Q   |   W   |   E   |   R   |   |   Y   |   U   |   I   |   O   |   P   |
            // hold     |       |       |       |       |       |   |       |       |       |       |       |
            //          _____________________________________________________________________________________
            // tap      |   G   |   A   |   S   |   D   |   F   |   |   H   |   J   |   K   |   L   |   ;   |
            // hold     | SHFT  |       |       |       |       |   |       | SHFT  | CTRL  |  ALT  |       |
            //          _____________________________________________________________________________________
            // tap      | CTRL  |   Z   |   X   |   C   |   V   |   |   N   |   M   |   ,   |   .   |   /   |
            // hold     |       |  ALT  |       |       |       |   |       |       |       |       |  GUI  |
            //
            // tap                      |  ESC  |  ENT  |  SPC  |   | BSPC  |  SPC  |  DEL  |
            // hold  LAYER              |   M   | (GAN) | (MOU) |   | (SYM) | (NUM) | (FUN) |

            bindings = <
&kp TAB       &kp Q           &kp W         &kp E          &kp R            &trans         &trans             &trans          &trans  &trans
&mt LSHIFT G  &kp A           &kp S         &kp D          &kp F            &trans         &trans             &trans          &trans  &trans
&kp LCTRL     &mt LEFT_ALT Z  &kp X         &kp C          &kp V            &trans         &trans             &trans          &trans  &trans
                              &mt M ESCAPE  &lt GAN SPACE  &lt MOU ENTER    &lt SYM ENTER  &lt NUM BACKSPACE  &lt FUN DELETE
            >;
        };

        gan_layer {
            display-name = "Gnum";

            // -----------------------------------------------------------------------------------------
            // tap      |   1   |   2   |   3   |   4   |   5   |   |   6   |   7   |   8   |   9   |   0   |
            // hold     |       |       |       |       |       |   |       |       |       |       |       |
            //          _____________________________________________________________________________________
            // tap      |   G   |   A   |   S   |   D   |   F   |   |   H   |   J   |   K   |   L   |   ;   |
            // hold     | SHFT  |       |       |       |       |   |       | SHFT  | CTRL  |  ALT  |       |
            //          _____________________________________________________________________________________
            // tap      | CTRL  |   Z   |   X   |   C   |   V   |   |   N   |   M   |   ,   |   .   |   /   |
            // hold     |       |  ALT  |       |       |       |   |       |       |       |       |  GUI  |
            //
            // tap                      |   M   |XXXXXXX|  SPC  |   | BSPC  |  SPC  |  DEL  |
            // hold  LAYER              |  ESC  |XXXXXXX| (MOU) |   | (SYM) | (NUM) | (FUN) |

            bindings = <
&kp N1        &kp N2          &kp N3  &kp N4  &kp N5    &kp N6  &kp N7  &kp N8  &kp N9  &kp N0
&mt LSHIFT G  &kp A           &kp S   &kp D   &kp F     &trans  &trans  &trans  &trans  &trans
&kp LCTRL     &mt LEFT_ALT Z  &kp X   &kp C   &kp B     &trans  &trans  &trans  &trans  &trans
                              &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        med_layer {
            display-name = "Med";

            // -----------------------------------------------------------------------------------------
            // tap      | RGBTG |   W   |   E   |   R   |   T   |   |   R   |   M   |   H   |   S   |   V   |
            // hold     |       |       |       |       |       |   |       |       |       |       |       |
            //          _____________________________________________________________________________________
            // tap      | HUEIN | SATIN | BRIIN | SPIN  |  EFF  |   |   E   | PREV  | VOLD  | VOLU  | NEXT  |
            // hold     |       |       |       |       |       |   |       |       |       |       |       |
            //          _____________________________________________________________________________________
            // tap      | HUEDN | SATDN | BRIDN | SPDN  |  EFR  |   |   O   |   0   |   1   |   2   |   3   |
            // hold     |  GUI  |       |       |       |       |   |       |       |       |       |  GUI  |
            //
            // tap                      |XXXXXXX|  ENT  |  TAB  |   | PLAY  | STOP  | MUTE  |
            // hold  LAYER              |XXXXXXX| (NAV) | (MOU) |   |       |       |       |

            bindings = <
&rgb_ug RGB_TOG  &trans           &kp F14          &kp F15          &trans             &kp R             &kp M           &kp H         &kp S            &kp V
&rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &rgb_ug RGB_EFF    &kp E             &kp C_PREVIOUS  &kp C_VOL_DN  &kp C_VOLUME_UP  &kp K_NEXT
&rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &rgb_ug RGB_EFR    &kp O             &kp N0          &kp N1        &kp N2           &kp N3
                                  &none            &trans           &trans             &kp K_PLAY_PAUSE  &kp K_STOP      &kp K_MUTE
            >;
        };

        sys_num_layer {
            display-name = "Nav";

            // -----------------------------------------------------------------------------------------
            // tap      |   *   |   7   |   8   |   9   |   +   |   | UNDO  |  CUT  | COPY  | PASTE | REDO  |
            // hold     |       |       |       |       |       |   |       |       |       |       |       |
            //          _____________________________________________________________________________________
            // tap      |   /   |   4   |   5   |   6   |   -   |   | CAPS  | HOME  |  UP   |  END  | PGUP  |
            // hold     |       |  ALT  | CTRL  | SHFT  |       |   |       |       |       |       |       |
            //          _____________________________________________________________________________________
            // tap      |   .   |   1   |   2   |   3   |   0   |   |  INS  | LEFT  | DOWN  | RGHT  | PGDN  |
            // hold     |  GUI  |       |       |       |       |   |       |       |       |       |       |
            //
            // tap                      | BSPC  |XXXXXXX|  DEL  |   | BSPC  |  SPC  |  DEL  |
            // hold  LAYER              |       |XXXXXXX|       |   | (SYM) | (NUM) | (FUN) |

            bindings = <
&kp STAR             &kp N7           &kp N8        &kp N9             &kp PLUS     &kp EQUAL          &kp LEFT_BRACE           &kp RIGHT_BRACE         &kp DOUBLE_QUOTES  &kp PIPE
&kp SLASH            &mt LEFT_ALT N4  &mt LCTRL N5  &mt LEFT_SHIFT N6  &kp MINUS    &kp UNDERSCORE     &mt RSHIFT LEFT_BRACKET  &mt RCTRL LEFT_BRACKET  &mt RIGHT_ALT SQT  &kp BACKSLASH
&mt LEFT_GUI PERIOD  &kp N1           &kp N2        &kp N3             &kp N0       &trans             &kp GRAVE                &kp TILDE               &trans             &kp LS(LG(N5))
                                      &trans        &none              &trans       &mt RIGHT_ALT TAB  &mt RIGHT_GUI RETURN     &kp RCTRL
            >;

            sensor-bindings =
                <&inc_dec_kp 0 0>,
                <&inc_dec_kp LC(RIGHT) LC(LEFT)>;
        };

        mou_navi_layer {
            display-name = "Mou";

            // -----------------------------------------------------------------------------------------
            // tap      | UNDO  |  CUT  | COPY  | PASTE | REDO  |   | UNDO  |  CUT  | COPY  | PASTE | REDO  |
            // hold     |       |       |       |       | PRTSC |   |       |       |       |       |       |
            //          _____________________________________________________________________________________
            // tap      | LEFT  | LCLK  |       | RCLK  | PGUP  |   | LEFT  | LCLK  |       | RCLK  | PGUP  |
            // hold     |       |       |       |       |       |   |       |       |       |       |       |
            //          _____________________________________________________________________________________
            // tap      | RGHT  |       |       |       | PGDN  |   | RGHT  |       |       |       | PGDN  |
            // hold     |       |       |       |       |       |   |       |       |       |       |       |
            //
            // tap                      |  ESC  |  ENT  |XXXXXXX|   | LCLK  | MCLK  | RCLK  |
            // hold  LAYER              | [DEF] | [GAM] |XXXXXXX|   |       |       |       |

            bindings = <
&kp LG(Z)      &kp LG(X)  &kp LG(C)     &kp LG(V)  &mt PRINTSCREEN LG(LS(Z))    &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LC(Y)
&kp PAGE_UP    &kp HOME   &kp UP_ARROW  &kp END    &kp CAPSLOCK                 &kp LEFT   &mkp LCLK  &trans     &mkp RCLK  &kp PAGE_UP
&kp PAGE_DOWN  &kp LEFT   &kp DOWN      &kp RIGHT  &kp DEL                      &kp RIGHT  &trans     &trans     &trans     &kp PAGE_DOWN
                          &to DEF       &to GAM    &none                        &mkp LCLK  &mkp MCLK  &mkp RCLK
            >;

            sensor-bindings =
                <&inc_dec_kp 0 0>,
                <&inc_dec_kp LC(UP_ARROW) LC(DOWN)>;
        };

        sym_navi_layer {
            display-name = "Sym";

            // -----------------------------------------------------------------------------------------
            // tap      |   {   |   &   |   *   |   (   |   }   |   | UNDO  |  CUT  | COPY  | PASTE | REDO  |
            // hold     |       |       |       |       |       |   |       |       |       |       |       |
            //          _____________________________________________________________________________________
            // tap      |   :   |   $   |   %   |   ^   |   +   |   | LEFT  | LCLK  |       | RCLK  | PGUP  |
            // hold     |       |       |       |       |       |   |       |       |       |       |       |
            //          _____________________________________________________________________________________
            // tap      |   ~   |   !   |   @   |   #   |   |   |   | RGHT  |       |       |       | PGDN  |
            // hold     |       |       |       |       |       |   |       |       |       |       |       |
            //
            // tap                      |   (   |   )   |   _   |   |XXXXXXX|  SPC  |  DEL  |
            // hold  LAYER              |       |       |       |   |XXXXXXX| (NUM) | (FUN) |

            bindings = <
&kp LESS_THAN     &kp AMPS  &kp STAR              &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp TAB  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp F14    &kp F15
&kp TILDE         &kp DLLR  &kp PERCENT           &mt LSHIFT CARET      &kp LEFT_BRACE           &kp INS  &mt RSHIFT HOME    &kp UP_ARROW     &kp END    &kp PAGE_UP
&kp GREATER_THAN  &kp EXCL  &kp AT                &kp HASH              &kp RIGHT_BRACE          &kp DEL  &kp LEFT           &kp DOWN         &kp RIGHT  &kp PAGE_DOWN
                            &kp LEFT_PARENTHESIS  &kp DOUBLE_QUOTES     &mt LCTRL PIPE           &none    &trans             &trans
            >;

            sensor-bindings = <&inc_dec_kp F15 F14>;
        };

        num_layer {
            display-name = "Num";

            // -----------------------------------------------------------------------------------------
            // tap      |   [   |   7   |   8   |   9   |   ]   |   |   +   |   7   |   8   |   9   |   *   |
            // hold     |       |       |       |       |       |   |       |       |       |       |       |
            //          _____________________________________________________________________________________
            // tap      |   ;   |   4   |   5   |   6   |   =   |   |   -   |   4   |   5   |   6   |   /   |
            // hold     |       |       |       |       |       |   |       |       |       |       |       |
            //          _____________________________________________________________________________________
            // tap      |   `   |   1   |   2   |   3   |   \   |   |   0   |   1   |   2   |   3   |   /   |
            // hold     |       |       |       |       |       |   |       |       |       |       |       |
            //
            // tap                      |   .   |   0   |   -   |   | BSPC  |XXXXXXX|  DEL  |
            // hold  LAYER              |       |       |       |   | (SYM) |XXXXXXX| (FUN) |

            bindings = <
&kp STAR  &kp AMPERSAND    &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp PLUS                 &kp EQUAL      &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp F14    &kp F15
&kp FSLH  &kp DOLLAR       &kp PERCENT   &kp CARET             &kp MINUS                &kp PAGE_UP    &kp HOME           &kp UP_ARROW     &kp END    &trans
&kp DOT   &kp EXCLAMATION  &kp AT_SIGN   &kp HASH              &kp RIGHT_PARENTHESIS    &kp PAGE_DOWN  &kp LEFT           &kp DOWN         &kp RIGHT  &kp PRINTSCREEN
                           &kp LCTRL     &mt LEFT_GUI SPACE    &mt LEFT_ALT CAPS        &trans         &none              &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        fun_layer {
            display-name = "Fun";

            // -----------------------------------------------------------------------------------------
            // tap      |  F12  |  F7   |  F8   |  F9   | PSCR  |   |  BT0  |  BT1  |  BT2  |  BT3  |  BT4  |
            // hold     |       |       |       |       |       |   |       |       |       |       |       |
            //          _____________________________________________________________________________________
            // tap      |  F11  |  F4   |  F5   |  F6   | SCRLK |   | DCN0  | DCN1  | DCN2  | DCN3  | DCN4  |
            // hold     |       |       |       |       |       |   |       |       |       |       |       |
            //          _____________________________________________________________________________________
            // tap      |  F10  |  F1   |  F2   |  F3   | PAUSE |   |  BLE  |  USB  |   ,   | BTCLA | BTCLR |
            // hold     |       |       |       |       |       |   |       |       |       |       |       |
            //
            // tap                      | [DEF] | [GAM] |  TAB  |   | BSPC  |  SPC  |XXXXXXX|
            // hold  LAYER              |       |       | (MOU) |   | (SYM) | (NUM) |XXXXXXX|

            bindings = <
&trans  &kp F7  &kp F8   &kp F9   &kp F12    &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3    &bt BT_SEL 4
&trans  &kp F4  &kp F5   &kp F6   &kp F11    &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3   &bt BT_DISC 4
&trans  &kp F1  &kp F2   &kp F3   &kp F10    &out OUT_BLE   &out OUT_USB   &trans         &bt BT_CLR_ALL  &bt BT_CLR
                &to DEF  &to GAM  &trans     &trans         &trans         &none
            >;
        };
    };
};
